{"version":3,"sources":["webpack://exports/webpack/bootstrap","webpack://exports/./src/sketch-replace-images-defaults.js","webpack://exports/./src/sketch-replace-images.js","webpack://exports/external \"sketch/dom\""],"names":["kDefaultsKey","module","exports","loadDefaults","NSUserDefaults","standardUserDefaults","objectForKey","saveDefaults","path","setObject_forKey","synchronize","clearDefaults","removeObjectForKey","SketchReplaceImagesDefaults","require","context","pasteBoard","NSPasteboard","generalPasteboard","titles","stringForType","NSPasteboardTypeString","lines","String","split","documents","Document","getDocuments","ddd","layers","getLayersNamed","console","log","length","i","text","fileManager","NSFileManager","defaultManager","doc","document","doc_folder","fileURL","toString","stringByDeletingLastPathComponent","relativePath","test","url","NSURL","URLWithString_relativeToURL","defaults","URLWithString","isValidPath","fileExistsAtPath","showMessage","direnum","enumeratorAtPath","filename","page","currentPage","children","imageTypes","NSArray","arrayWithArray","images_available","NSMutableDictionary","dictionary","images_replaced","nextObject","basefileName","lastPathComponent","pathExtension","containsObject","images_available_keys","allKeys","count","layer","class","j","type","objectAtIndex","imageName","name","imageNameForUrl","stringByAddingPercentEscapesUsingEncoding","NSUTF8StringEncoding","srcImage","NSImage","alloc","initByReferencingFile","isValid","old_width","frame","width","old_height","height","replaceAction","MSReplaceImageAction","init","applyImage_tolayer","setWidth","setHeight","push"],"mappings":"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","file":"sketch-replace-images.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/sketch-replace-images.js\");\n","const kDefaultsKey = \"de.shakemno.sketch-replace-images.defaultsKey\";\n\nmodule.exports = {\n  loadDefaults: function() {\n    return NSUserDefaults.standardUserDefaults().objectForKey(kDefaultsKey);\n  },\n  saveDefaults: function(path) {\n    NSUserDefaults.standardUserDefaults().setObject_forKey(path, kDefaultsKey);\n    NSUserDefaults.standardUserDefaults().synchronize();\n  },\n\n  clearDefaults: function() {\n    NSUserDefaults.standardUserDefaults().removeObjectForKey(kDefaultsKey);\n    NSUserDefaults.standardUserDefaults().synchronize();\n  }\n};\n","const SketchReplaceImagesDefaults = require('./sketch-replace-images-defaults');\n\nexport default function(context) {\n  //从剪贴板中替换文字，用/n进行断行\n\n  var pasteBoard = NSPasteboard.generalPasteboard();\n  // Turn a data in the string type\n  var titles = pasteBoard.stringForType(NSPasteboardTypeString);\n  //var titles = [pasteBoard stringForType:NSPasteboardTypeString];\n\n  var lines = String(titles).split('\\n');\n\n  var documents = require('sketch/dom').Document.getDocuments();\n  //第一个打开的文件\n  var ddd = documents[0];\n  var layers = ddd.getLayersNamed('title'); \n  console.log(layers.length);\n  if (layers.length) {\n      // do something\n      //sketch.UI.message(layers.length.to_s());\n      for (var i = 0; i < layers.length && i < lines.length; i++)\n      {\n        layers[i].text = lines[i];\n      }\n  }\n    \n  //替换图片\n  var fileManager = NSFileManager.defaultManager();\n  var doc = context.document;\n  var doc_folder = doc.fileURL().toString().stringByDeletingLastPathComponent();\n\n  log(\"SketchReplaceImages - trying to update images...\");\n\n  var relativePath = doc_folder;\n  if (!/\\/$/.test(relativePath)) {\n    relativePath = relativePath + \"/\";\n  }\n\n  var url = NSURL.URLWithString_relativeToURL(relativePath, doc.fileURL());\n\n  var defaults = SketchReplaceImagesDefaults.loadDefaults();\n  if(defaults) {\n    relativePath = defaults;\n    url = NSURL.URLWithString(relativePath);\n  }\n\n  var isValidPath = fileManager.fileExistsAtPath(url.path())\n  console.log(\"isValidPath: \"+isValidPath);\n\n  if (isValidPath === 0) \n  {\n    doc.showMessage(\"Sorry, can't find a valid directory. Try (re-)setting the path url.\");\n    return;\n  }\n\n  console.log(\"url: \"+url);\n\n  var direnum = fileManager.enumeratorAtPath(url.path());\n  var filename;\n  var fileURL;\n\n  var page = doc.currentPage();\n  var layers = page.children();\n\n  var imageTypes = NSArray.arrayWithArray([\"png\", \"jpg\", \"jpeg\"]);\n  var images_available = NSMutableDictionary.dictionary();\n  var images_replaced = [];\n\n  console.log(\"collecting available images...\");\n\n  while ((filename = direnum.nextObject() ))\n  {\n    var basefileName = filename.toString().lastPathComponent();\n    var pathExtension = basefileName.pathExtension();\n\n    if(imageTypes.containsObject(pathExtension))\n    {\n      images_available.setObject_forKey(filename, basefileName);\n    }\n  }\n  \n\n  console.log(\"updating images...\");\n\n  var images_available_keys = images_available.allKeys();\n  for (var i=0; i<layers.count(); i++)\n  {\n    var layer = layers[i];\n    if(layer.class().toString() == \"MSBitmapLayer\")\n    {\n      // loop through image types\n      for (var j = 0; j < imageTypes.count(); j++)\n      {\n        var type = imageTypes.objectAtIndex(j);\n        var imageName = layer.name() + \".\" + type;\n\n        if( images_available_keys.containsObject(imageName) )\n        {\n          // Do URL escaping on imageName\n          var imageNameForUrl = images_available.objectForKey(imageName);\n          imageNameForUrl = imageNameForUrl.stringByAddingPercentEscapesUsingEncoding(NSUTF8StringEncoding);\n\n          if(defaults) {\n            fileURL = NSURL.URLWithString((relativePath+imageNameForUrl));\n          }\n          else\n          {\n            fileURL = NSURL.URLWithString_relativeToURL(imageNameForUrl, url);\n          }\n\n          if( fileManager.fileExistsAtPath(fileURL.path()) )\n          {\n            var srcImage = NSImage.alloc().initByReferencingFile(fileURL.path());\n            if (srcImage.isValid())\n            {\n              var old_width = layer.frame().width();\n              var old_height = layer.frame().height();\n\n              var replaceAction = MSReplaceImageAction.alloc().init();\n              if(true) //([replaceAction validate])\n              {\n                replaceAction.applyImage_tolayer(srcImage, layer);\n                layer.frame().setWidth(old_width);\n                layer.frame().setHeight(old_height);\n                images_replaced.push(imageName);\n                break; // we'll only pick the first match...\n              }\n            }\n          }\n        }\n\n      }\n    }\n  }\n\n  // check if we updated any images, report accordingly\n  if(images_replaced.length > 0)\n  {\n    doc.showMessage(\"\"+images_replaced.length+\" images updated.\");\n  }\n  else\n  {\n    doc.showMessage(\"Sorry, couldn't update images...\");\n  }\n\n};\n\n","module.exports = require(\"sketch/dom\");"],"sourceRoot":""}